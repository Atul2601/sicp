//Exercise 1.11.  A function f is defined by the rule that f(n) = n if n<3 and f(n) = f(n - 1) + 2f(n - 2) + 3f(n - 3) if n>=3.
//Write a procedure that computes f by means of a recursive process.
//Write a procedure that computes f by means of an iterative process.

(define (recursiveF number)
	(cond ((< number 3) number)
	      (else
	      	(+
	      		(recursiveF (- number 1))
	      		(* 2 (recursiveF (- number 2)))
	      		(* 3 (recursiveF (- number 3)))
	      	)
	      )
	)
)


(define (iterativeF n)
   (if (< n 3)
       n
       (fWithIter 2 1 0 n))
)
(define (fWithIter a b c n)
     (if (< n 3)  a
         (fWithIter (+ a (* 2 b) (* 3 c))
                    a
                    b
                    (- n 1)
         )
     )
)

//in fWithIter a=f(n-1), b=f(n-2), c=f(n-3)